<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:sec="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/security
   	http://www.springframework.org/schema/security/spring-security-3.1.xsd
   	http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans.xsd">
	
	<import resource="appServlet/servlet-context.xml"/>
	
	
	
	<sec:http auto-config="true" use-expressions="true" >
	<sec:form-login login-page="/" default-target-url="/" 
                        username-parameter="Login" password-parameter="Password" 
                        login-processing-url="/j_spring_security_check" authentication-failure-url="/home?login_error=t" 
                        always-use-default-target="true" authentication-failure-handler-ref="customAuthenticationFailureHandler"/>
			
	<sec:logout logout-url="/j_spring_security_logout" logout-success-url="/" />
	<sec:intercept-url pattern="/management/**" access="hasRole('ROLE_ADMIN')" />
	</sec:http>											
	<sec:authentication-manager>
	<sec:authentication-provider>
		<sec:password-encoder hash="sha"/>
		<sec:jdbc-user-service data-source-ref="dataSource"
			users-by-username-query="select Login, Password, 'true' as enabled from users where Login = ?"
			authorities-by-username-query="select Login, Role from users inner join userroles on
			users.RoleId = userroles.Id where Login = ?" />
	</sec:authentication-provider>
	
	
	</sec:authentication-manager>	
</beans>

	
