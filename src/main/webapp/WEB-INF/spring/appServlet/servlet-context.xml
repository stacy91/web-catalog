<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:sec="http://www.springframework.org/schema/security"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/security
   		http://www.springframework.org/schema/security/spring-security-3.0.xsd">
   	
   	
   	<sec:http auto-config="true" use-expressions="false">
	<sec:form-login login-processing-url="/static/j_spring_security_check"
		login-page="/home"	authentication-failure-url="/home?login_error=t"/>
	<sec:logout logout-url="/static/j_spring_security_logout"/>
	</sec:http>
	
	
	<sec:authentication-manager> 
                <sec:authentication-provider> 
                        <sec:jdbc-user-service data-source-ref="dataSource" 
                                users-by-username-query="select Login, Password, Id from users where Login = ?" 
                                authorities-by-username-query="select Login, Role from users inner join userroles on users.RoleId = roles.Id where username = ?" /> 
                </sec:authentication-provider> 
    </sec:authentication-manager>
	

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	<!-- Enables the Spring MVC @Controller programming model -->
	<mvc:annotation-driven conversion-service="conversionService"/>
	<context:annotation-config/>
	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<mvc:resources mapping="/resources/**" location="/resources/" />

	<context:component-scan base-package="com.controller, com.models, com.helpers" />
	
	
	
	
	<bean id="conversionService"
    class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
    	<property name="formatters">
        	<set>
            	<ref bean="brandFormatter" />
        	</set>
    	</property>
	</bean>
	
	 <beans:bean id="tilesConfigurer" 
                class="org.springframework.web.servlet.view.tiles2.TilesConfigurer"> 
                <beans:property name="definitions"> 
                        <beans:list> 
                                <beans:value>/WEB-INF/views/tiles.xml</beans:value> 
                        </beans:list>
                </beans:property> 
        </beans:bean>
	
		<beans:bean id="viewResolver" 
                class="org.springframework.web.servlet.view.UrlBasedViewResolver"> 
                <beans:property name="viewClass"> 
                        <beans:value> 
                                org.springframework.web.servlet.view.tiles2.TilesView 
                        </beans:value> 
                          </beans:property> 
        </beans:bean> 
        
        <beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        	<beans:property name="maxUploadSize" value="20971520" /> <!-- 20MB -->
        	<beans:property name="maxInMemorySize" value="10048576" />
    	</beans:bean>
                        
		
	<bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="com.mysql.jdbc.Driver"/>
    <property name="url" value="jdbc:mysql://localhost:3306/myonlineshopdb"/>
    <property name="username" value="stacy"/>
    <property name="password" value="stacy"/>
	</bean>	
    
    <bean id="sessionFactory"
     	class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="packagesToScan"
			value="com.entities" />
		<property name="hibernateProperties">
			<props>
				<prop key="dialect">org.hibernate.dialect.MySQLDialect</prop>
			</props>
		</property>
	</bean>
     
    <tx:annotation-driven />
	<bean id="transactionManager"
    	class="org.springframework.orm.hibernate4.HibernateTransactionManager">
    	<property name="sessionFactory" ref="sessionFactory" />
	</bean>
    
    <bean 
    class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor"/>
    	
</beans>
